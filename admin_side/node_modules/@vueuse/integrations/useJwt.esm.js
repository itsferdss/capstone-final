import { ref, computed } from 'vue-demi';
import jwt_decode from 'jwt-decode';

/**
 * Reactive decoded jwt token.
 *
 * @see https://vueuse.org/useJwt
 * @param jwt
 */
function useJwt(encodedJwt, options = {}) {
    const encodedJwtRef = ref(encodedJwt);
    const { onError, fallbackValue = null, } = options;
    const decodeWithFallback = (encodedJwt, options) => {
        try {
            return jwt_decode(encodedJwt, options);
        }
        catch (err) {
            onError === null || onError === void 0 ? void 0 : onError(err);
            return fallbackValue;
        }
    };
    const header = computed(() => decodeWithFallback(encodedJwtRef.value, { header: true }));
    const payload = computed(() => decodeWithFallback(encodedJwtRef.value));
    return {
        header,
        payload,
    };
}

export { useJwt };
